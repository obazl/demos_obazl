load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "Test",
    opts = [
        # "-verbose", ## OCaml flag
    ] + select({
        # "@platforms//os:macos": [
        #     "-ccopt", "-v", # cc driver verbosity
        #     # "-ccopt", "-Wl,-t", # linker
        #     # "-ccopt", "-Wl,-print_statistics" # linker
        # ],
        # "@platforms//os:linux": ["-ccopt", "-Wl,-v"],
        "//conditions:default": []
    }),
    timeout = "short"
)

ocaml_module(
    name   = "Test",
    struct = "test.ml",
    deps = [
        "@opam.ounit2//lib",
        ":Hello",
    ],
)

ocaml_module(
    name = "Hello",
    struct = "hello.ml",
    ## for testing opam extension:
    # deps = ["@opam.ppx_expect//lib/ppx_expect",
    #         "@opam.base//lib/base"],
    # data = ["@opam.menhir//bin:menhir"],
    opts = [
        # "-opaque"
        # "-verbose", # OCaml: print calls to external cmds
        # "-dlocations",
        # "-dsource",
        #"-dparsetree",
        # "-dtypedtree",
        # "-dshape",
        # "-dlambda",
        # "-dclambda",
        # "-dsel",
        # "-dcombine",
        # "-dtimings"
    ]
)
