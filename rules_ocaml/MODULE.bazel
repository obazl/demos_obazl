module(
    name = "demos",
    version = "0.0.0",
    bazel_compatibility = [">=8.0.0"],
    compatibility_level = 0,
)

## bcr:
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_cc", version = "0.0.17")

## obazl:
bazel_dep(name = "rules_ocaml", version = "5.0.0")
bazel_dep(name = "rules_ppx", version = "5.0.0")
bazel_dep(name = "tools_ocaml", version = "2.0.0.bzl.8")
bazel_dep(name = "tools_opam", version = "5.0.0")

bazel_dep(
    name = "obazl",
    version = "3.0.0",
    dev_dependency = True,
)

# bazel_dep(name = "ocamlsdk",  version = "0.0.0")
# register_toolchains("@ocamlsdk//toolchain/selectors/local:all")
# register_toolchains("@ocamlsdk//toolchain/profiles:all")

bazel_dep(name = "obazl_menhir", version = "5.0.0")
## - if you want to explicitly depend on e.g.
##   "@opam.menhir//bin:menhir" then you must
##   explicitly 'use' the module. See
##   parsing/menhir/handrolled for an example
##   using genrule instead of custom rule 'menhir'.
## - not needed if you use rule 'menhir'
##   as in demo parsing/menhir/mwe
##   In that case the above bazel_dep is sufficient.
# uncomment the following three lines to make @opam.menhir available

# opam = use_extension( "@tools_opam//extensions:opam.bzl", "opam")
# use_repo(opam, "opam.menhir")
# use_repo(opam, "opam.menhirLib")

# bazel_dep(name = "coswitch",        version = "5.0.0",
#           dev_dependency = True)
# bazel_dep(name = "obazl_tools_cc", version = "2.0.0",
#           dev_dependency = True)

include("//.config/opam:opam.MODULE.bazel")
