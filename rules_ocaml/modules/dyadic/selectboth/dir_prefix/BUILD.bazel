# Demonstrates binding variant structures and signatures,
# using directories as namespace prefixes.

load(":BUILD.bzl", "selection_proxy")

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_signature",
    "ocaml_test",
)

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test"
)

ocaml_module(
    name   = "Test",
    struct = ":fg_test",
    opts = ["-w", "-27"],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":Hello",
        "@opam.ounit2//lib/ounit2"
    ],
)

filegroup(
    name = "fg_test",
    srcs = select({
        "//bzl:linux_en": ["test_linux_en.ml"],
        "//bzl:linux_fr": ["test_linux_fr.ml"],
        "//bzl:macos_en": ["test_macos_en.ml"],
        "//bzl:macos_fr": ["test_macos_fr.ml"],
    }),
)

ocaml_module(
    name   = "Hello",
    sig    = ":fg_sig_hello",
    # sig = select({
    #     "//bzl:lang_en":
    #     "//modules/dyadic/selectboth/dir_prefix/sig/en:Hello",
    #     # ["//modules/dyadic/selectboth/dir_prefix/sig/en:hello.mli"],

    #     "//bzl:lang_fr":
    #     # ["//modules/dyadic/selectboth/dir_prefix/sig/fr:hello.mli"],
    #     "//modules/dyadic/selectboth/dir_prefix/sig/fr:Hello",
    # }, no_match_error = "unsupported sig"),
    struct = ":fg_struct_hello",
)

selection_proxy(
    name = "fg_sig_hello",
    selectors = {
        "//bzl:lang_en":
        # ["//modules/dyadic/selectboth/dir_prefix/sig/en:Hello"],
        ["//modules/dyadic/selectboth/dir_prefix/sig/en:hello.mli"],

        "//bzl:lang_fr":
        # ["//modules/dyadic/selectboth/dir_prefix/sig/fr:hello.mli"],
        ["//modules/dyadic/selectboth/dir_prefix/sig/fr:Hello"],
    },
    no_match_error_msg = "Unsupported language"
)

selection_proxy(
    name = "fg_struct_hello",
    selectors = {
        "//bzl:linux_en":
        ["//modules/dyadic/selectboth/dir_prefix/linux/en:hello.ml"],

        "//bzl:linux_fr":
        ["//modules/dyadic/selectboth/dir_prefix/linux/fr:hello.ml"],

        "//bzl:macos_en":
        ["//modules/dyadic/selectboth/dir_prefix/macos/en:hello.ml"],

        "//bzl:macos_fr":
        ["//modules/dyadic/selectboth/dir_prefix/macos/fr:hello.ml"],

    },
    no_match_error_msg = "unsupported language"
)

################################################################
## below: for testing
ocaml_test(name = "test1_linux_en", main = "Test1_linux_en")
ocaml_module(name   = "Test1_linux_en", struct = "test_linux_en.ml",
             module_name = "Test1_linux_en",
             opts = ["-w", "-27"],
             deps = [":Hello_test1_linux_en", "@opam.ounit2//lib/ounit2"]
)
ocaml_module(
    name   = "Hello_test1_linux_en",
    module_name = "Hello_test1_linux_en",
    sig    = "//modules/dyadic/selectboth/dir_prefix/sig/en:hello.mli",
    struct = "//modules/dyadic/selectboth/dir_prefix/linux/en:hello.ml",
)

ocaml_test(name = "test2_linux_en", main = "Test2_linux_en")
ocaml_module(name   = "Test2_linux_en", struct = "test_linux_en.ml",
             module_name = "Test2_linux_en",
             opts = ["-w", "-27"],
             deps = [":Hello_test2_linux_en", "@opam.ounit2//lib/ounit2"]
)
ocaml_module(
    name   = "Hello_test2_linux_en",
    sig    = "//modules/dyadic/selectboth/dir_prefix/sig/en:Hello",
    struct = "//modules/dyadic/selectboth/dir_prefix/linux/en:hello.ml",
)

ocaml_test(name = "test1_macos_en", main = "Test1_macos_en")
ocaml_module(name   = "Test1_macos_en", struct = "test_macos_en.ml",
             module_name = "Test1_macos_en",
             opts = ["-w", "-27"],
             deps = [":Hello_test1_macos_en", "@opam.ounit2//lib/ounit2"]
)
ocaml_module(name   = "Hello_test1_macos_en",
             module_name = "Hello_test1_macos_en",
     sig    = "//modules/dyadic/selectboth/dir_prefix/sig/en:hello.mli",
     struct = "//modules/dyadic/selectboth/dir_prefix/macos/en:hello.ml",
)

ocaml_test(name = "test2_macos_en", main = "Test2_macos_en")
ocaml_module(name   = "Test2_macos_en", struct = "test_macos_en.ml",
             module_name = "Test2_macos_en",
             opts = ["-w", "-27"],
             deps = [":Hello_test2_macos_en", "@opam.ounit2//lib/ounit2"]
)
ocaml_module(name   = "Hello_test2_macos_en",
    sig    = "//modules/dyadic/selectboth/dir_prefix/sig/en:Hello",
    struct = "//modules/dyadic/selectboth/dir_prefix/macos/en:hello.ml",
)

################
test_suite(
    name = "tests",
    tests = [
        ":test1_linux_en",
        ":test2_linux_en",
        ":test1_macos_en",
        ":test2_macos_en",
    ]
)
