load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_library",
    "ocaml_ns",
    "ocaml_test",
)

ocaml_test(
    name    = "test",
    main    = "Test",
    timeout = "short",
)

ocaml_module(
    name    = "Test",
    struct  = "test.ml",
    deps    = ["@opam.ounit2//lib", ":libColor"],
)

## aggregate resolvers and subnamespaces
ocaml_library(
    name = "libColor",
    manifest = [
        ":nsRGB",
        "//ns/bottomup/submodules/rgb:libRGB"
    ],
)

# merge all submodules of exogenous ns RGB into MyRGB namespace
# e.g. MyRGB.Red => RGB.Red
ocaml_ns(
    name        = "nsRGB",
    ns          = "MyRGB",
    ns_merge  = [
        "//ns/bottomup/submodules/rgb:nsRGB"
    ]
)
