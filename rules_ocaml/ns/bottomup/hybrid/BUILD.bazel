load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_library",
    "ocaml_ns_resolver",
    "ocaml_test",
)

ocaml_ns_resolver(
    name = "nsGreek",
    ns   = "Greek",
    manifest = [
        # elective submodules
        "Alpha",
        "Beta",
        "Gamma",
        ],
    include = {
        # exogenous NON-namespaced submodules
        "//mwe/rgb:R": "R",
        "//mwe/rgb:G": "G",
        "//mwe/rgb:B": "B",
    },
    merge = [
        # exogenous namespaced submodules
        "//ns/bottomup/election/rgb:nsRGB"
    ],
    embed = {
        "//ns/bottomup/embed/colors/cmyk:nsCMYK": "CMYK"
    }
)

# package resolver and submodules in one library
ocaml_library(
    name = "libGreek",
    manifest = [
        # ":nsGreek",
        ":Alpha",
        ":Beta",
        ":Gamma",
        "//mwe/rgb:R",
        "//mwe/rgb:G",
        "//mwe/rgb:B",
        "//ns/bottomup/election/rgb:libRGB",
        "//ns/bottomup/embed/colors/cmyk:libCMYK",
    ],
)

#############
ocaml_module(
    name        = "Alpha",
    ns_resolver = ":nsGreek",
    struct      = "alpha.ml",
)

ocaml_module(
    name        = "Beta",
    ns_resolver = ":nsGreek",
    struct      = "beta.ml",
)

ocaml_module(
    name        = "Gamma",
    ns_resolver = ":nsGreek",
    struct      = "gamma.ml",
)

#############
ocaml_module(
    name   = "Test",
    struct = "test.ml",
    deps = [
        ":libGreek",
        "@ounit2//lib/ounit2",
    ],
)

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test"
)

