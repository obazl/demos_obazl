fail("WARNING: outdated code. won't work.")

load("@obazl_rules_ocaml//ocaml:build.bzl",
     "ocaml_archive",
     "ocaml_ns_archive",
     "ocaml_binary",
     "ocaml_module",
)

package(default_visibility = ["//visibility:public"])

ocaml_ns_archive(
    name = "archive",
    # module_name = "foo",
    manifest = glob(["alpha/**/*.ml"]),
    # manifest = [
    #     ## NOTE: order matters, if these refer to each other:
    #     "alpha/beta1/gamma/goodbye.ml",
    #     "alpha/beta1/gamma/hello.ml",
    #     "alpha/beta1/pluto.ml",
    #     "alpha/beta2/gamma/hello.ml",
    #     "alpha/gamma/howdy.ml",
    # ],
)

## Step 3. Use the archive:
## $ bazel run namespaces/ns_archive/macro/alpha:test
ocaml_binary(
    name = "test",
    srcs = ["driver.ml"],
    opts = ["-linkall",
            "-w", "-49",
            # "-no-alias-deps",
            "-verbose"],
    deps = [":archive"]
)

## without archive - depending on source files
ocaml_binary(
    name = "testx",
    srcs = [":ns_archive_srcs", "driver.ml"],
    opts = ["-linkall",
            "-w", "-49",
            "-no-alias-deps",
            "-verbose"],
)
