load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_library",
    "ocaml_module",
    "ocaml_ns",
    "ocaml_test"
)

MANIFEST = [
    ":Australian",
    ":English",
    ":French",
    ":Spanish"
]

ocaml_test(
    name    = "test",
    main    = "Test",
    timeout = "short",
)

ocaml_module(
    name    = "Test",
    struct  = "test.ml",
    deps    = [
        "@opam.ounit2//lib",
        ":libHello"
    ]
)

##############
ocaml_library(
    name = "libHello",
    manifest = [":Hello"] + MANIFEST
)

##################
# hello.ml acts as ns resolver for private ns
ocaml_module(
    name       = "Hello",
    struct     = "hello.ml",
    open       = [":nsHello"], # => '-open Hello__'
    opts       = ["-no-alias-deps", "-w", "-49"],
)

ocaml_ns(
    name       = "nsHello",
    ns_name    = "hello", # => Hello__ (since private)
    private    = True,
    submodules = MANIFEST
)

ocaml_module(
    name       = "Australian",
    ns         = ":nsHello",
    struct     = "australian.ml",
)

ocaml_module(
    name       = "English",
    ns         = ":nsHello",
    struct     = "english.ml",
)

ocaml_module(
    name       = "French",
    ns         = ":nsHello",
    struct     = "french.ml",
)

ocaml_module(
    name       = "Spanish",
    ns         = ":nsHello",
    struct     = "spanish.ml",
)
