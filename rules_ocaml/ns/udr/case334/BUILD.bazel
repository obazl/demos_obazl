# set300/case334

## In this case we have a user-supplied main nslib module that contains
## aliasing equations for an nslib submodule.
## Legacy code may have a user-supplied main nslib module that references
## code in an nslib submodule, but does not contain an aliasing equation for it.
## See case336 for an example.

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "Test"
)

ocaml_module(
    name   = "Test",
    struct = "test.ml",
    opts = ["-w", "-27"], ## Error (warning 27): unused variable test_ctxt.
    deps = [":alpha", "@opam.ounit2//lib/ounit2"],
)

#################
ocaml_ns_library(
    name = "alpha",
    manifest = [
        ":Alpha", ## user-provided main module
        ":Red",
        ":Green",
        ":Blue",
        "//ns/obazl/set300/case334/beta:beta"
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name   = "Alpha",
    struct = "alpha.ml",
    deps   = [
        ":Red",
        ":Green",
        ":Blue"
    ]
)

ocaml_module(
    name = "Red",
    struct = "red.ml",
)

ocaml_module(
    name = "Green",
    struct = "green.ml",
    visibility = [
        "//ns/obazl/class03/case09:__pkg__",
        "//ns/obazl/class03/case10:__pkg__",
        "//ns/obazl/set035/case03:__pkg__",
        "//ns/obazl/set035/case04:__pkg__",
    ],
)

ocaml_module(
    name = "Blue",
    struct = "blue.ml",
    visibility = ["//ns/obazl/set035/case03:__pkg__"],
)
