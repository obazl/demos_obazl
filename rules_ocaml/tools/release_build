#!/usr/bin/env bash

VERBOSE=
QUIET=
TARGET="//..."


while getopts "qvt:" arg; do
  case $arg in
      q)
          QUIET="--noshow_loading_progress \
          --noshow_progress \
          --show_result 0 \
          --ui_event_filters=-DEBUG,-INFO"
          ;;
      v)
          VERBOSE="--color=yes --subcommands=pretty_print"
          ;;
      t)
          TARGET=${OPTARG}
          ;;
  esac
done

# set -x

STARTUP_PARAMS="--ignore_all_rc_files --quiet"

# STARTUP_PARAMS="--nosystem_rc \
#     --nohome_rc \
#     --nosystem_rc \
#     --noworkspace_rc \


PARAMS="--announce_rc \
    --lockfile_mode=off \
    --symlink_prefix=.bazel/ \
    --repository_cache= \
    --nokeep_state_after_build \
    --registry=https://raw.githubusercontent.com/obazl/registry/main/ \
    --registry=https://bcr.bazel.build \
    ${QUIET}"

bazel clean --expunge --ui_event_filters=-INFO
printf "%s" "Toolchain: ocamlopt.opt  (sys>sys)... "
bazel ${STARTUP_PARAMS} \
      build $TARGET \
      ${PARAMS} \
      $VERBOSE
return_code=$?
if [ $return_code -eq 0 ]; then
  echo "OK"
else
  echo "bazel build with exit code: $return_code"
fi

bazel clean --expunge --ui_event_filters=-INFO
printf "%s" "Toolchain: ocamlc.byte   (vm>vm)... "
bazel ${STARTUP_PARAMS} \
      build $TARGET \
      ${PARAMS} \
      $VERBOSE \
      --host_platform=@rules_ocaml//platform:ocamlc.byte
return_code=$?
if [ $return_code -eq 0 ]; then
  echo "OK"
else
  echo "bazel build with exit code: $return_code"
fi

bazel clean --expunge --ui_event_filters=-INFO
printf "%s" "Toolchain: ocamlc.opt    (sys>vm)... "
bazel ${STARTUP_PARAMS} \
      build $TARGET \
      ${PARAMS} \
      $VERBOSE \
      --host_platform=@rules_ocaml//platform:ocamlc.opt \
      --platforms=@rules_ocaml//platform:ocamlc.byte
return_code=$?
if [ $return_code -eq 0 ]; then
  echo "OK"
else
  echo "bazel build with exit code: $return_code"
fi

bazel clean --expunge --ui_event_filters=-INFO
printf "%s" "Toolchain: ocamlopt.byte (vm>sys)... "
bazel ${STARTUP_PARAMS} \
      build $TARGET \
      ${PARAMS} \
      $VERBOSE \
      --host_platform=@rules_ocaml//platform:ocamlopt.byte \
      --platforms=@rules_ocaml//platform:ocamlopt.opt

return_code=$?
if [ $return_code -eq 0 ]; then
  echo "OK"
else
  echo "bazel build with exit code: $return_code"
fi
