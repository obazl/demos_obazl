# for //interop/ffi
bazel_dep(name = "zstd", version = "1.5.6")

opam = use_extension("@tools_opam//extensions:opam.bzl", "opam")

bazel_dep(name = "obazl_menhir", repo_name="menhir")
use_repo(opam, "opam.menhir", "opam.menhirLib")
git_override(module_name = "obazl_menhir",
             branch  = "2024.07.15.beta",
             remote = "https://github.com/obazl/obazl_menhir.git")

bazel_dep(name = "obazl_cppo")
use_repo(opam, "opam.cppo")
git_override(module_name = "obazl_cppo",
             branch  = "1.8.0.beta",
             remote = "https://github.com/obazl/obazl_cppo.git")

opam.deps(
    # toolchain = "local", # | "global" | "xdg"
    toolchain = "xdg",
    ocaml_version = "5.1.1",
    opam_version = "2.3.0",
    # debug = 2,
    # verbosity = 1,
    # opam_verbosity = 1,
    pkgs = {
        "alcotest": "",
        "cmdliner": "",
        "core": "",
        "lwt": "",
        "ounit2": "2.2.7",
        "ppx_deriving": "",
        # "ppx_expect": "",
        "ppx_here": "",
        "ppx_inline_test": "",
        "ppx_optcomp": "",
        "ppx_sexp_conv": "",
        "ppx_sexp_value": "",
        "ppxlib": "",
        # "ppxlib_jane": "",  # >= 5.1.0
        "sexplib": "",
        "time_now": "",

        # "async": "",  # //testing/ppx_expect demo, <5.3.0
        # "ppx_jane": "",  # //testing/ppx_expect demo, <5.3.0
        # "core_unix": "", # <5.3.0
        # "metapp": "",   # <5.3.0?
        # "metaquot": "",   # <5.3.0?
        "ppx_show": "",        # <5.3.0
    },
    # dev_deps = {
    # },
)

use_repo(opam, "opam.ocamlsdk")
# use_repo(opam, "opam.stublibs")
register_toolchains(
    "@opam.ocamlsdk//toolchain/selectors/local:all",
    "@opam.ocamlsdk//toolchain/profiles:all",
)

use_repo(opam, "opam.alcotest")
use_repo(opam, "opam.cmdliner")
use_repo(opam, "opam.core")
use_repo(opam, "opam.lwt")
use_repo(opam, "opam.ounit2")
use_repo(opam, "opam.ppx_deriving")
use_repo(opam, "opam.ppx_here")
use_repo(opam, "opam.ppx_inline_test")
use_repo(opam, "opam.ppx_optcomp")
use_repo(opam, "opam.ppx_sexp_conv")
use_repo(opam, "opam.ppx_sexp_value")
use_repo(opam, "opam.ppxlib")
# use_repo(opam, "opam.ppxlib_jane")
use_repo(opam, "opam.sexplib")
use_repo(opam, "opam.time_now")



# use_repo(opam, "opam.async")
# use_repo(opam, "opam.core_unix") # <5.3.0
# use_repo(opam, "opam.ppx_jane")
# use_repo(opam, "opam.metapp")    # <5.3.0
# use_repo(opam, "opam.metaquot")  # <5.3.0
use_repo(opam, "opam.ppx_show")  # <5.3.0
