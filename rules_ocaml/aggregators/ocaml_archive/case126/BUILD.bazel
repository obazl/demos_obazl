## aggregators/archives/case120: two simple archives

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_binary",
    "ocaml_library",
    "ocaml_module",
    "ocaml_test",
)

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test",
    # prologue = ["@opam.ounit2//lib/ounit2"]
)

ocaml_module(
    name   = "Test",
    struct = "test.ml",
    deps = [
        "@opam.ounit2//lib/ounit2",
        ":Main",
    ],
)

#############
ocaml_module(
    name = "Main",
    struct = "main.ml",
    deps = [
        ":libColor",
    ]
)

##############
ocaml_library(
    name = "libColor",
    archived = True,
    manifest = [
        ":Red",
        ":Green",
        ":Blue",
    ],
)

ocaml_module(
    name = "Red",
    struct = "red.ml",
)

ocaml_module(
    name = "Green",
    struct = "green.ml",
)

ocaml_module(
    name = "Blue",
    struct = "blue.ml",
    opts = ["-linkall"],
    deps   = [
        ":libGreek"
    ]
)

##############
ocaml_library(
    name = "libGreek",
    archived = True,
    opts = ["-linkall"],
    manifest = [
        ":Alpha",
        ":Beta",
        ":Gamma"
    ],
)

ocaml_module(
    name = "Alpha",
    opts = ["-linkall"],
    struct = "alpha.ml",
)

ocaml_module(
    name = "Beta",
    struct = "beta.ml",
)

ocaml_module(
    name = "Gamma",
    struct = "gamma.ml",
)
