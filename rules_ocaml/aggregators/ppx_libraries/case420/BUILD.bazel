load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_binary",
    "ocaml_library",
    "ocaml_module",
    "ocaml_test",
)
load("@rules_ppx//build:rules.bzl", "ppx_executable")

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test"
)

ocaml_module(
    name   = "Test",
    struct = "test.ml",
    ppx = ":ppx.exe",
    deps = [":main", "@opam.ounit2//lib"]
)

#################
ocaml_binary(
    name = "hello",
    main = ":main",
)

ocaml_module(
    name   = "main",
    struct = "main.ml",
    ppx    = ":ppx.exe", ## main.ml includes extension points
)

###############
ppx_executable(
    name = "ppx.exe",
    main = ":Ppxlib_driver",
    prologue = [":ppx_color", "@opam.ppxlib//lib"]
)

############
ocaml_library(
    name = "ppx_color",
    manifest = [
        ":ppx_red",
        ":ppx_green",
        ":ppx_blue",
    ],
)

ocaml_module(
    name      = "ppx_red",
    struct    = "ppx_red.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "ppx_green",
    struct    = "ppx_green.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "ppx_blue",
    struct    = "ppx_blue.ml",
    deps      = ["@opam.ppxlib//lib"]
)

###########
ocaml_module(
    name = "Ppxlib_driver",
    struct = ":ppxlib_driver.ml",
    deps      = ["@opam.ppxlib//lib"]
)

########
genrule(
    name = "gendriver",
    outs = ["ppxlib_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
