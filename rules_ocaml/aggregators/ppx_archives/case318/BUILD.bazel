##FIXME broken

## aggregators/ppx_archives/case318: two simple (independent) archives

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_library",
    "ocaml_module",
    "ocaml_test",
)
load("@rules_ppx//build:rules.bzl", "ppx_executable")

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test"
)

ocaml_module(
    name = "Test",
    struct = "test.ml",
    ppx  = ":ppx.exe",
    # ppx_args = ["-reconcile"],
    ppx_print = "@rules_ppx//print:text",
    # ppx_verbose = True,
    opts = ["-w", "-27"],  ## Error (warning 27): unused variable test_ctxt.
    deps = ["@opam.ounit2//lib"]
)

###############
ppx_executable(
    name = "ppx.exe",
    main = ":Runner",
    prologue = [
        ## FIXME: deps mgmt broken
        # ":lib_ppx_greek",

        ":lib_ppx_color",


        # ":ppx_driver",
        # ":ppx_color_driver",
        ":Ppx_greek_driver",
        "@opam.ppxlib//lib"
    ],
)

############
## archived libs cannot be aggregated
ocaml_library(
    name = "Ppx_aggregated_archives",
    archived = True,
    # opts = ["-verbose"],
    manifest = [
        ":lib_ppx_color",
        ":lib_ppx_greek",
    ]
)


###########
ocaml_module(
    name      = "ppx_driver",
    struct    = "ppx_driver.ml",
    deps      = [":lib_ppx_color"], #  ":lib_ppx_greek"],
    opts      = ["-w", "-33"]   ## unused open
)

###########
# ocaml_module(
#     name      = "ppx_color_driver",
#     struct    = "ppx_color.ml",
#     deps      = [":lib_ppx_color"],
#     opts      = ["-w", "-33"]   ## unused open
# )

############
ocaml_library(
    name = "lib_ppx_color",
    # archived = True,
    opts = [
        "-linkall",
        # "-verbose",
        "-open", "Ppx_gamma"
    ],
    manifest = [
        ":Ppx_red",
        ":Ppx_green",
        ":Ppx_blue",

        # ":Ppx_alpha",
        # ":Ppx_beta",
        # ":Ppx_gamma",
       ":Ppx_greek_driver",
    ]
)

ocaml_module(
    name      = "Ppx_red",
    struct    = "ppx_red.ml",
    opts = ["-linkall"],
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "Ppx_green",
    struct    = "ppx_green.ml",
    opts = ["-linkall"],
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "Ppx_blue",
    struct    = "ppx_blue.ml",
    opts = ["-linkall"],
    deps      = ["@opam.ppxlib//lib"]
)

###########
ocaml_module(
    name      = "Ppx_greek_driver",
    struct    = "ppx_greek_driver.ml",
    deps = [
        # ":Ppx_alpha",
        # ":Ppx_beta",
        # ":Ppx_gamma",
        ":lib_ppx_greek"
    ],
    opts = [
        "-w", "-33", ## unused open
        "-linkall"
    ]
)

############
ocaml_library(
    name = "lib_ppx_greek",
    # archived = True,
    opts = ["-linkall"],
    manifest = [
        ":Ppx_alpha",
        ":Ppx_beta",
        ":Ppx_gamma",
        # ":Ppx_greek_driver"
    ],
)

ocaml_module(
    name      = "Ppx_alpha",
    opts = ["-linkall"],
    struct    = "ppx_alpha.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "Ppx_beta",
    opts = ["-linkall"],
    struct    = "ppx_beta.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "Ppx_gamma",
    opts = ["-linkall"],
    struct    = "ppx_gamma.ml",
    deps      = ["@opam.ppxlib//lib"]
)

#############
ocaml_module(
    name = "Runner",
    struct = ":ppxlib_runner.ml",
    deps      = ["@opam.ppxlib//lib"]
)

########
genrule(
    name = "genrunner",
    outs = ["ppxlib_runner.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
