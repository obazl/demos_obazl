load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_library",
    "ocaml_module",
    "ocaml_test",
)
load("@rules_ppx//build:rules.bzl", "ppx_executable")

ocaml_test(
    timeout = "short",
    name = "test",
    main = "Test"
)

ocaml_module(
    name      = "Test",
    struct    = "test.ml",
    ppx       = ":ppx.exe",
    ppx_print = "@rules_ppx//print:text",
    deps      = ["@opam.ounit2//lib"]
)

###############
ppx_executable(
    name = "ppx.exe",
    main = ":ppxlib_runner",
    prologue = [
        ":driver",
        "@opam.ounit2//lib"
    ],
)

###########
ocaml_module(
    name      = "driver",
    struct    = "driver.ml",
    deps      = [":ppx_color"],
    opts      = ["-w", "-33"]   ## unused open
)

############
ocaml_library(
    name = "ppx_color",
    linkage  = "static",
    manifest = [
        ":ppx_red",
        ":ppx_green",
        ":ppx_blue",
    ],
)

ocaml_module(
    name      = "ppx_red",
    struct    = "ppx_red.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "ppx_green",
    struct    = "ppx_green.ml",
    deps      = ["@opam.ppxlib//lib"]
)

ocaml_module(
    name      = "ppx_blue",
    struct    = "ppx_blue.ml",
    deps      = ["@opam.ppxlib//lib"]
)

###########
ocaml_module(
    name = "ppxlib_runner",
    struct = ":ppxlib_runner.ml",
    deps      = ["@opam.ppxlib//lib"]
)

########
genrule(
    name = "genrunner",
    outs = ["ppxlib_runner.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
