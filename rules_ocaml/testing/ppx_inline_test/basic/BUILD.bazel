load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_binary",
    "ocaml_module",
    "ocaml_test",
)
load("@rules_ppx//build:rules.bzl", "ppx_executable")

LIBNAME="hello"

# "Code using this extension must be compiled and linked using the ppx_inline_test.runtime-lib library"
# i.e. ppx_inline_test.runtime-lib is a codep.  This is handled transparently by the module
# @opam.ppx_inline_test//lib, which lists as a ppx_codep.

# "Tests are only executed when both these conditions are met:
#  * the executable containing the tests is linked with ppx_inline_test.runner.lib
#  * the executable containing the tests is called with command line arguments:
#        your.exe inline-test-runner libname [options]"

## WARNING: the module under test was built with
## -inline-test-lib=="Hello"; if you pass anything else with
## inline-test-runner, running this test executable will
## report success, because it will not run the test.

## omitting -inline-test-lib altogether gives: "You are doing something
## unexpected with the tests. No tests have been run. You
## should use the inline_tests_runner script to run tests."

ocaml_test(
    name = "test",
    # vm_linkage = "static",
    args = [
        "inline-test-runner", LIBNAME,
        # "-list-test-names",
        # "-log",
    ],
    opts = [
        # "-verbose"
        # "-cclib", "-lppx_inline_test_runner_lib_stubs"
        # "-dllib", "-lppx_inline_test_runner_lib_stubs"
    ],
    prologue = [
        "@opam.ppx_inline_test//runner/lib/lib",
        ":Hello",
    ],
    # this contains:
    # let () = Ppx_inline_test_lib.exit ()
    # main = "@opam.ppx_inline_test//runner/lib",
    main = ":Runner",
    timeout = "short"
)

ocaml_module(
    name   = "Runner",
    struct = "runner.ml",
    deps   = [
        "@opam.ppx_inline_test//runtime-lib/lib",
    ],
)

ocaml_module(
    name = "Hello",
    ppx = ":ppx.exe",
    ppx_args = [
        "-inline-test-lib", LIBNAME
    ],
    ppx_print = "@rules_ppx//print:text",
    struct = "hello.ml",
    deps = [ ]
)

################################################################
ppx_executable(
    name = "ppx.exe",
    # opts = ["-verbose"],
    prologue = [
        "@opam.ppx_inline_test//lib",
    ],
    main = ":Driver",
    # opts = ["-dllib", "-lbase_internalhash_types_stubs"],
    # ppx_codeps = [
    #     "@opam.ppx_inline_test//runtime-lib/lib",
    # ]
)

#############
ocaml_module(
    name = "Driver",
    struct = ":ppxlib_driver.ml",
    visibility = ["//visibility:public"],
    deps = ["@opam.ppxlib//lib"],
)

########
genrule(
    name = "gendriver",
    outs = ["ppxlib_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
