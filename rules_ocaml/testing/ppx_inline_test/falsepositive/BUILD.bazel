load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_binary",
    "ocaml_module",
    "ocaml_test",
)
load("@rules_ppx//build:rules.bzl", "ppx_executable")

LIBNAME="hello"

## https://github.com/janestreet/ppx_inline_test
# Tests are only executed when both these conditions are met:

# * the executable containing the tests is linked with
# * ppx_inline_test.runner.lib

# * the executable containing the tests is called with command line
# arguments: 'your.exe inline-test-runner libname [options]'


## For ppx_inline_test we need to use the ppx_executable to transform
## the source file, and we need to run
## `Ppx_inline_test_lib.Runtime.exit ()` last.
ocaml_test(
    name = "test",
    args = [
        ## WARNING: the module under test was built with
        ## -inline-test-lib=="hello"; if you pass anything else with
        ## inline-test-runner, running this test executable will
        ## report success, because it will not run the test.
        "inline-test-runner", "FOO",
    ],
    ## :Runner contains Ppx_inline_test_lib.Runtime.exit (); obazl
    ## puts 'main' last
    main = ":Runner",
    prologue = [
        # ":Test_ppx_inline",  # the transformed and compiled test code
        "@opam.ppx_inline_test//lib/runner",
        # "//rules/ocaml_module:Hello",
        ":Hello"
    ],
    timeout = "short"
)

ocaml_module(
    name   = "Runner",
    struct = "runner.ml",
    deps   = [
        "@opam.ppx_inline_test//lib/runtime-lib",
    ],
)

ocaml_module(
    name = "Hello",
    ppx = ":ppx.exe",
    ppx_args = [
        "-inline-test-lib", LIBNAME
    ],
    struct = "hello.ml",
    deps = [
        # "@opam.core//lib/core",
        "@opam.ppx_inline_test//lib/runtime-lib", ## not needed -
        # listed as ppx_codep on the ppx executable
        # "//rules/ocaml_module:Hello"
    ],
)

################################################################
ppx_executable(
    name = "ppx.exe",
    main = ":Driver",
    opts = [],
    prologue = [
        # "@opam.ppxlib//lib/ppxlib",
    ],
    ppx_codeps = [
        "@opam.ppx_inline_test//lib/runtime-lib",
    ]
)

###########
ocaml_module(
    name = "Driver",
    struct = ":ppxlib_driver.ml",
    visibility = ["//visibility:public"],
    deps = [
        "@opam.ppx_inline_test//lib/ppx_inline_test",
        "@opam.ppxlib//lib/ppxlib"
    ],
)

########
genrule(
    name = "gendriver",
    outs = ["ppxlib_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
